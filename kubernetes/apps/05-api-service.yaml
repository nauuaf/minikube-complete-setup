---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      imagePullSecrets:
      - name: registry-creds
      containers:
      - name: api
        image: localhost:30500/api-service:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: VERSION
          value: "1.0.0"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: service-auth
              key: jwt-secret
        - name: INTERNAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: service-auth
              key: internal-api-key
        - name: AUTH_SERVICE_TOKEN
          valueFrom:
            secretKeyRef:
              name: service-auth
              key: auth-service-token
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-password
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: storage-credentials
              key: s3-access-key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: storage-credentials
              key: s3-secret-key
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: storage-credentials
              key: s3-endpoint
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: redis-password
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-host
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-database
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: api-service
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-service-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-service-pdb
  namespace: production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api-service