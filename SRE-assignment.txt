تكليف عملي – SRE
السيناريو:
لديك نظام مكون من ثلاث خدمات ويب (مثلاً: خدمة API رئيسية، وخدمة مصادقة، وخدمة تخزين صور)، جميعها مكتوبة بلغات مختلفة (مثلاً Node.js, Go, Python).
 مطلوب منك بناء بيئة تشغيل لهذه الخدمات على Kubernetes مع تحقيق أعلى اعتمادية وأمان ورصد وتوسّع تلقائي، مع محاكاة سيناريوهات للفشل ومعالجتها.
 
المهام:
1.	تحليل النظام وتصميم المعمارية:
○	صمّم مخطط معماري (architecture diagram) يوضح كيفية تواصل الخدمات مع بعضها وبعض الخدمات الخارجية (قاعدة بيانات، S3، إلخ).
○	وضّح كيف ستعزل كل خدمة (network policies, namespaces) وكيف ستدير بيانات الاعتماد (secrets management).
2.	بناء ونشر الخدمات:
○	أنشئ Dockerfiles لكل خدمة مع متطلبات تشغيلها.
○	ارفع الصور إلى private registry (وصف طريقة الرفع والوصول من الكلاستر).
○	أنشئ ملفات YAML لتشغيل كل خدمة على شكل Deployment منفصل مع Service مناسب (ClusterIP, NodePort, Ingress).
3.	شبكات وأمان:
○	فعّل Network Policies لمنع الوصول غير المصرح به بين الـ Pods.
○	استعمل Secrets لإدارة كلمات المرور وبيانات الاتصال الحساسة.
○	أضف Ingress مع شهادة TLS (Let's Encrypt أو self-signed).
4.	الرصد والتنبيه:
○	نفّذ مراقبة متقدمة عبر Prometheus & Grafana مع مؤشرات مخصصة لكل خدمة (custom metrics).
○	أضف Alertmanager مع تكامل مع أداة تنبيهات خارجية (Mailgun, Slack, إلخ).
○	أنشئ Dashboard مفصّل لكل خدمة، مع لوحة إجمالية للنظام.
5.	التوسع التلقائي وضمان الجاهزية:
○	فعّل HPA لكل خدمة بناءً على مؤشرات مناسبة (CPU, Memory, Requests).
○	أضف Liveness وReadiness Probes واقعية لكل خدمة.
○	استعمل PodDisruptionBudget لضمان توفر الحد الأدنى من البودات أثناء الصيانة.
6.	محاكاة الفشل والتعافي:
○	صمّم سيناريوهات فشل (مثل: توقف قاعدة البيانات، تعطل خدمة، ارتفاع مفاجئ في الطلبات على خدمة الصور).
○	نفّذ هذه السيناريوهات ودوّن كيف يتعامل Kubernetes مع الفشل (logs, events, rescheduling, alerts).
○	أرفق فيديو أو تقرير قصير يوضح كيف تم رصد الفشل والاستجابة والتنبيهات.
7.	التوثيق والتسليم:
○	README شامل يشرح:
■	كيف بنيت ونشرت البيئة بالتفصيل.
■	خطوات محاكاة الفشل والتحقق من التعافي.
■	كيف يمكن إعادة إنتاج التجربة (setup scripts, deployment steps).
■	الدروس المستفادة واقتراحات التحسين.
○	أرفق جميع الأكواد، ملفات YAML، السكربتات، وصور المخطط المعماري (يمكن رسم المخطط باستخدام أي أداة).
 
متطلبات إضافية:
●	تقديم مخطط معماري (يدوي أو عبر أدوات مثل draw.io أو Lucidchart).
●	توثيق كل سيناريو فشل بنتائج واضحة (لقطات شاشة، فيديو، أو وصف دقيق للنتيجة).


